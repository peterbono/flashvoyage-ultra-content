import axios from 'axios';

const WORDPRESS_URL = 'https://flashvoyage.com/';
const WORDPRESS_USERNAME = 'admin7817';
const WORDPRESS_APP_PASSWORD = 'GjLl 9W0k lKwf LSOT PXur RYGR';

async function verifyFixes() {
  console.log('üîç V√©rification des corrections...');
  
  try {
    // 1. V√©rifier les articles avec images
    console.log('\nüìä V√©rification des articles avec images...');
    
    const response = await axios.get(`${WORDPRESS_URL}/wp-json/wp/v2/posts?per_page=100&status=publish`, {
      auth: {
        username: WORDPRESS_USERNAME,
        password: WORDPRESS_APP_PASSWORD
      }
    });
    
    const articles = response.data;
    let withImages = 0;
    let withoutImages = 0;
    
    for (const article of articles) {
      if (article.featured_media > 0) {
        withImages++;
      } else {
        withoutImages++;
        console.log(`   ‚ö†Ô∏è  Article sans image: ${article.title.rendered} (ID: ${article.id})`);
      }
    }
    
    console.log(`‚úÖ Articles avec images: ${withImages}`);
    console.log(`‚ö†Ô∏è  Articles sans images: ${withoutImages}`);
    
    // 2. Tester l'acc√®s aux articles
    console.log('\nüß™ Test d\'acc√®s aux articles...');
    
    let accessibleCount = 0;
    let errorCount = 0;
    
    for (let i = 0; i < Math.min(5, articles.length); i++) {
      const article = articles[i];
      console.log(`\nüìÑ Test article: ${article.title.rendered}`);
      console.log(`   URL: ${article.link}`);
      
      try {
        const testResponse = await axios.get(article.link, {
          timeout: 10000
        });
        
        if (testResponse.status === 200) {
          console.log('   ‚úÖ Accessible');
          accessibleCount++;
        } else {
          console.log(`   ‚ùå Erreur HTTP: ${testResponse.status}`);
          errorCount++;
        }
      } catch (error) {
        console.log(`   ‚ùå Erreur: ${error.message}`);
        errorCount++;
        
        // Essayer avec l'URL directe
        const directUrl = `${WORDPRESS_URL}?p=${article.id}`;
        try {
          const directResponse = await axios.get(directUrl, {
            timeout: 10000
          });
          
          if (directResponse.status === 200) {
            console.log('   ‚úÖ Accessible via URL directe');
            accessibleCount++;
          } else {
            console.log(`   ‚ùå Erreur URL directe: ${directResponse.status}`);
          }
        } catch (directError) {
          console.log(`   ‚ùå Erreur URL directe: ${directError.message}`);
        }
      }
    }
    
    // 3. R√©sum√© des corrections
    console.log('\nüéâ R√âSUM√â DES CORRECTIONS:');
    console.log('='.repeat(50));
    console.log(`‚úÖ Images ajout√©es: ${withImages} articles`);
    console.log(`‚úÖ Articles test√©s: ${accessibleCount + errorCount}`);
    console.log(`‚úÖ Articles accessibles: ${accessibleCount}`);
    console.log(`‚ùå Articles avec erreur: ${errorCount}`);
    
    if (errorCount > 0) {
      console.log('\n‚ö†Ô∏è  PROBL√àME DE PERMALIENS D√âTECT√â:');
      console.log('Pour corriger d√©finitivement:');
      console.log('1. Allez dans WordPress Admin > R√©glages > Permaliens');
      console.log('2. S√©lectionnez "Nom de l\'article"');
      console.log('3. Cliquez sur "Enregistrer les modifications"');
      console.log('4. Testez √† nouveau l\'acc√®s aux articles');
    } else {
      console.log('\nüéâ TOUT FONCTIONNE PARFAITEMENT !');
      console.log('‚úÖ Images ajout√©es avec succ√®s');
      console.log('‚úÖ Articles accessibles');
      console.log('‚úÖ Syst√®me MCP op√©rationnel');
    }
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la v√©rification:', error.response?.data?.message || error.message);
  }
}

// Ex√©cuter la v√©rification
verifyFixes();


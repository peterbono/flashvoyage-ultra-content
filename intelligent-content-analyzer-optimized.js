#!/usr/bin/env node

import axios from 'axios';
import { OPENAI_API_KEY } from './config.js';

class IntelligentContentAnalyzerOptimized {
  constructor() {
    this.apiKey = OPENAI_API_KEY;
  }

  // Analyser intelligemment le contenu d'un article avec les 4 types de t√©moignage
  async analyzeContent(article) {
    try {
      // V√©rifier si la cl√© API est disponible
      if (!this.apiKey) {
        console.log('‚ö†Ô∏è Cl√© OpenAI non disponible - Utilisation du fallback');
        return this.getFallbackAnalysis(article);
      }

      const prompt = `Tu es un expert √©ditorial pour FlashVoyages.com, sp√©cialis√© dans le voyage en Asie.

ARTICLE √Ä ANALYSER:
- Titre: ${article.title}
- Source: ${article.source}
- Type: ${article.type}
- Contenu: ${article.content}
- Lien: ${article.link}

MISSION: Analyser ce contenu et d√©terminer la meilleure approche √©ditoriale.

GUIDELINES FLASHVOYAGES:
- Cible: Digital nomades et voyageurs passionn√©s d'Asie
- Sp√©cialit√©s: Bons plans, formalit√©s, transports, s√©curit√©, tourisme
- Objectif: Contenu unique, valeur ajout√©e, √©conomies concr√®tes
- Ton: Expert, confident, proche (comme Voyage Pirate mais pour l'Asie)

TYPES DE CONTENU DISPONIBLES:
1. TEMOIGNAGE_SUCCESS_STORY (15% du contenu)
   - R√©cits de r√©ussite, transformation, objectifs atteints
   - Structure: D√©fi ‚Üí Action ‚Üí R√©sultat
   - Ton: Inspirant, motivant, authentique
   - Exemples: "Comment j'ai doubl√© mes revenus", "Ma transformation nomade"

2. TEMOIGNAGE_ECHEC_LE√áONS (10% du contenu)
   - Erreurs commises, le√ßons apprises, pr√©vention
   - Structure: Erreur ‚Üí Cons√©quences ‚Üí Le√ßons
   - Ton: Humble, pr√©ventif, √©ducatif
   - Exemples: "Mon √©chec avec le visa", "L'erreur qui m'a co√ªt√© cher"

3. TEMOIGNAGE_TRANSITION (10% du contenu)
   - Changements de vie, adaptations, √©volutions
   - Structure: Avant ‚Üí Pendant ‚Üí Apr√®s
   - Ton: R√©fl√©chi, adaptatif, encourageant
   - Exemples: "De salari√© √† nomade", "Ma transition vers l'Asie"

4. TEMOIGNAGE_COMPARAISON (5% du contenu)
   - Comparaisons entre destinations, m√©thodes, options
   - Structure: Option A vs Option B ‚Üí Recommandation
   - Ton: Comparatif, objectif, informatif
   - Exemples: "Bali vs Vietnam", "Coliving vs Airbnb"

5. GUIDE_PRATIQUE (20% du contenu)
   - Guides step-by-step, proc√©dures, checklists
   - Structure: Introduction ‚Üí √âtapes ‚Üí Conclusion
   - Ton: Pratique, utilitaire, actionnable
   - Exemples: "Comment obtenir un visa", "Guide coliving Asie"

6. COMPARAISON_DESTINATIONS (15% du contenu)
   - Comparaisons d√©taill√©es entre pays/villes
   - Structure: Crit√®res ‚Üí Analyse ‚Üí Recommandation
   - Ton: Analytique, objectif, informatif
   - Exemples: "Vietnam vs Tha√Ølande", "Bangkok vs Chiang Mai"

7. ACTUALITE_NOMADE (15% du contenu)
   - Nouvelles, tendances, r√©glementations
   - Structure: Contexte ‚Üí Impact ‚Üí Conseils
   - Ton: Inform√©, r√©actif, pratique
   - Exemples: "Nouveau visa nomade", "Changements r√©glementaires"

8. CONSEIL_PRATIQUE (10% du contenu)
   - Astuces, bonnes pratiques, optimisations
   - Structure: Probl√®me ‚Üí Solution ‚Üí B√©n√©fices
   - Ton: Expert, confident, pratique
   - Exemples: "Comment √©conomiser", "Astuces productivit√©"

ANALYSE REQUISE:
1. Type de contenu (un des 8 types ci-dessus)
2. Sous-cat√©gorie sp√©cifique (visa, logement, transport, sant√©, finance, communaut√©)
3. Angle √©ditorial (pratique, comparatif, analyse, conseil, inspirant, pr√©ventif)
4. Audience cible sp√©cifique (d√©butant, confirm√©, expert, famille, senior)
5. Destination concern√©e (Vietnam, Tha√Ølande, Indon√©sie, Japon, Cor√©e du Sud, Singapour, Asie)
6. Niveau d'urgence (high, medium, low)
7. Mots-cl√©s pertinents (max 5)
8. CTA appropri√©
9. Score de pertinence (0-100)
10. Recommandation: template_fixe OU generation_llm
11. Template sp√©cifique √† utiliser (si template_fixe)

R√âPONDRE UNIQUEMENT EN JSON VALIDE:
{
  "type_contenu": "TEMOIGNAGE_SUCCESS_STORY",
  "sous_categorie": "visa",
  "angle": "inspirant",
  "audience": "nomades_debutants_vietnam",
  "destination": "Vietnam",
  "urgence": "medium",
  "keywords": "visa nomade vietnam, r√©ussite, transformation",
  "cta": "D√©couvrez comment r√©ussir votre visa nomade au Vietnam",
  "pertinence": 85,
  "recommandation": "generation_llm",
  "template_specifique": "success_story",
  "raison": "R√©cit de r√©ussite avec conseils pratiques pour d√©butants"
}`;

      const response = await axios.post('https://api.openai.com/v1/chat/completions', {
        model: 'gpt-4',
        messages: [{ role: 'user', content: prompt }],
        max_tokens: 600,
        temperature: 0.3
      }, {
        headers: {
          'Authorization': `Bearer ${this.apiKey}`,
          'Content-Type': 'application/json'
        }
      });

      const analysis = JSON.parse(response.data.choices[0].message.content);
      return analysis;

    } catch (error) {
      console.error('‚ùå Erreur analyse intelligente:', error.message);
      return this.getFallbackAnalysis(article);
    }
  }

  // G√©n√©rer du contenu intelligent avec 2 appels LLM s√©quentiels
  async generateIntelligentContent(article, analysis) {
    try {
      console.log('üîç DEBUG: Author dans article:', article.author);
      // Extraire le contenu complet de l'article source
      const fullContent = await this.extractFullContent(article);
      
      // APPEL 1 : Extraction et structure
      console.log('üß† Appel 1 : Extraction et structure...');
      const extractionResult = await this.extractAndStructure(article, analysis, fullContent);
      
      // APPEL 2 : G√©n√©ration finale
      console.log('üß† Appel 2 : G√©n√©ration finale...');
      const finalContent = await this.generateFinalArticle(extractionResult, analysis, article);
      
      return finalContent;

    } catch (error) {
      console.error('‚ùå Erreur g√©n√©ration intelligente:', error.message);
      // Refuser de publier plut√¥t que de cr√©er du faux contenu
      throw new Error(`ERREUR TECHNIQUE: Impossible de g√©n√©rer le contenu pour "${article.title}". Refus de publier du contenu g√©n√©rique.`);
    }
  }

  // APPEL 1 : Extraction et structure avec contexte syst√®me
  async extractAndStructure(article, analysis, fullContent) {
    const systemMessage = `Tu es un expert FlashVoyages sp√©cialis√© dans l'analyse de t√©moignages Reddit. 

Extrait les √©l√©ments cl√©s selon la structure SUCCESS_STORY:
- D√©fi initial et objectifs
- Strat√©gies gagnantes (3-5 points)
- R√©sultats concrets (chiffres, pourcentages)
- Co√ªts d√©taill√©s (breakdown mensuel)
- Erreurs commises et le√ßons
- Sp√©cificit√©s locales
- Comparaisons avec autres destinations
- Conseils pratiques pour reproduire

R√©ponds UNIQUEMENT en JSON avec ces cl√©s: citations, donnees_cles, structure, enseignements, defis, strategies, resultats, couts, erreurs, specificites, comparaisons, conseils.`;

    const userMessage = `TITRE: ${article.title}
CONTENU: ${fullContent.substring(0, 1000)}`;

    console.log(`üìè Taille system: ${systemMessage.length} caract√®res`);
    console.log(`üìè Taille user: ${userMessage.length} caract√®res`);

    const response = await axios.post('https://api.openai.com/v1/chat/completions', {
      model: 'gpt-4o',
      messages: [
        { role: 'system', content: systemMessage },
        { role: 'user', content: userMessage }
      ],
      max_tokens: 800,
      temperature: 0.7,
      response_format: { type: "json_object" }
    }, {
      headers: {
        'Authorization': `Bearer ${this.apiKey}`,
        'Content-Type': 'application/json'
      }
    });

    const content = JSON.parse(response.data.choices[0].message.content);
    console.log('‚úÖ Extraction termin√©e:', Object.keys(content));
    return content;
  }

  // APPEL 2 : G√©n√©ration finale avec contexte syst√®me
  async generateFinalArticle(extraction, analysis, article) {
    const systemMessage = `Tu es un expert FlashVoyages. Cr√©e un article de qualit√© exceptionnelle avec la STRUCTURE IMMERSIVE:

STRUCTURE IMMERSIVE OBLIGATOIRE:
1. INTRODUCTION FOMO + CURATION (OBLIGATOIRE)
   Format: "Pendant que vous h√©sitez, d'autres agissent. Chez FlashVoyages, nous avons s√©lectionn√© ce t√©moignage Reddit qui montre comment [transformation]."

2. T√âMOIGNAGE AVEC CITATIONS DIRECTES (OBLIGATOIRE) - 3 citations minimum
   - Utilise les citations R√âELLES de l'article source
   - Format OBLIGATOIRE EXACT (en string simple):
     <blockquote>Citation textuelle du Reddit...</blockquote>
     <p>T√©moignage de [AUTHOR_REDDIT_REEL] sur [source]</p>
   - IMPORTANT: Utilise UNIQUEMENT l'author Reddit fourni dans les donn√©es pour les citations
   - JAMAIS d'inventer de pseudos - utilise SEULEMENT l'author r√©el
   - Le titre de l'article NE DOIT PAS contenir le nom de l'auteur
   - G√©n√®re les citations comme des strings simples, pas des objets

3. TRANSITIONS NARRATEUR (OBLIGATOIRE)
   - Utilise les transitions naturelles bas√©es sur le contenu Reddit r√©el
   - Cr√©e des liens fluides entre les sections
   - √âvite les phrases mod√®les r√©p√©titives

4. SC√àNES SENSORIELLES (OBLIGATOIRE)
   - Bruits, odeurs, sensations du t√©moignage
   - Utilise UNIQUEMENT les d√©tails du t√©moignage Reddit r√©el
   - JAMAIS d'inventer de sc√®nes g√©n√©riques

5. QUESTIONS RH√âTORIQUES (OBLIGATOIRE)
   - "Imaginez-vous...", "Et si vous...", "Que feriez-vous si..."
   - 2-3 questions par section

6. VARIATION DU RYTHME (OBLIGATOIRE)
   - Phrases courtes et percutantes
   - Phrases plus longues pour expliquer et respirer

7. CONTEXTE DES CITATIONS (OBLIGATOIRE)
   - 'L'auteur √©crit:', 'Dans les commentaires un lecteur a dit:'
   - Toujours pr√©ciser d'o√π vient la citation (Reddit)

8. MISE EN PERSPECTIVE (OBLIGATOIRE)
   - Terminer chaque section par un enseignement pratique
   - Quel pi√®ge √† √©viter, quelle le√ßon pour le lecteur nomade

TON: Inspirant, motivant, authentique
FORMAT HTML: <h2>, <h3>, <p>, <blockquote>, <ul><li>, <strong>, <table>
LONGUEUR: 1500-2000 mots

IMPORTANT: Le titre de l'article NE DOIT PAS contenir le nom de l'auteur Reddit. Utilise l'author UNIQUEMENT dans les citations.

R√©ponds UNIQUEMENT en JSON avec cette structure: { "article": { "titre": "...", "introduction": "...", "citations": [...], "developpement": "...", "conseils_pratiques": "...", "signature": "..." } }`;

    const userMessage = `TITRE: ${extraction.title || 'T√©moignage Reddit'}
AUTHOR_REDDIT_REEL: ${article.author}
CITATIONS: ${extraction.citations || 'Citations'}
DONN√âES: ${extraction.donnees_cles || 'Donn√©es'}
ENSEIGNEMENTS: ${extraction.enseignements || 'Enseignements'}
D√âFIS: ${extraction.defis || 'D√©fis'}
STRAT√âGIES: ${extraction.strategies || 'Strat√©gies'}
R√âSULTATS: ${extraction.resultats || 'R√©sultats'}
CO√õTS: ${extraction.couts || 'Co√ªts'}
ERREURS: ${extraction.erreurs || 'Erreurs'}
SP√âCIFICIT√âS: ${extraction.specificites || 'Sp√©cificit√©s'}
COMPARAISONS: ${extraction.comparaisons || 'Comparaisons'}
CONSEILS: ${extraction.conseils || 'Conseils'}`;

    console.log(`üìè Taille system: ${systemMessage.length} caract√®res`);
    console.log(`üìè Taille user: ${userMessage.length} caract√®res`);

    const response = await axios.post('https://api.openai.com/v1/chat/completions', {
      model: 'gpt-4o',
      messages: [
        { role: 'system', content: systemMessage },
        { role: 'user', content: userMessage }
      ],
      max_tokens: 1500,
      temperature: 0.7,
      response_format: { type: "json_object" }
    }, {
      headers: {
        'Authorization': `Bearer ${this.apiKey}`,
        'Content-Type': 'application/json'
      }
    });

    const content = JSON.parse(response.data.choices[0].message.content);
    console.log('‚úÖ Article final g√©n√©r√©:', Object.keys(content));
    
    // Reconstruire le contenu final √† partir de la structure article
    if (content.article) {
      const article = content.article;
      const finalContent = {
        title: article.titre || 'T√©moignage Reddit d√©crypt√© par FlashVoyages',
        content: [
          article.introduction,
          ...(article.citations || []).map(citation => {
            if (typeof citation === 'string') {
              return citation;
            }
            // Si c'est un objet, essayer d'extraire le texte
            const text = citation.text || citation.quote || citation.content || citation;
            // JAMAIS DE FAKE DATA - Utiliser SEULEMENT les vraies donn√©es
            if (!article.author) {
              throw new Error(`ERREUR CRITIQUE: Pas d'author Reddit disponible pour "${article.title}". Refus de publier avec des donn√©es invent√©es.`);
            }
            const auteur = `u/${article.author}`;
            const source = citation.source || 'Reddit';
            return `<blockquote>${text}</blockquote>\n<p>T√©moignage de ${auteur} sur ${source}</p>`;
          }),
          article.developpement,
          article.conseils_pratiques,
          article.signature
        ].filter(Boolean).join('\n\n')
      };
      console.log('üìÑ Contenu final reconstruit:', finalContent.title);
      return finalContent;
    }
    
    return content;
  }

  // G√©n√©ration de contenu simple en cas d'erreur - UNIQUEMENT avec vraies donn√©es
  async generateSimpleContent(article, analysis) {
    try {
      const fullContent = await this.extractFullContent(article);
      
      // V√©rifier qu'on a du vrai contenu
      if (!fullContent || fullContent.length < 100) {
        throw new Error(`CONTENU INSUFFISANT: Impossible d'extraire le contenu de "${article.title}". Refus de publier.`);
      }
      
      const simplePrompt = `Cr√©e un article FlashVoyages bas√© sur ce t√©moignage Reddit R√âEL:

TITRE REDDIT: ${article.title}
CONTENU REDDIT COMPLET: ${fullContent.substring(0, 1200)}

IMPORTANT: Utilise UNIQUEMENT les informations du t√©moignage Reddit fourni. Ne pas inventer de citations ou de donn√©es.

G√©n√®re un article complet avec:
1. Introduction FOMO bas√©e sur le contenu r√©el
2. Citations directes du Reddit (extrait du contenu fourni) avec attribution compl√®te
3. Transitions du narrateur
4. Sc√®nes sensorielles bas√©es sur le t√©moignage
5. Questions rh√©toriques
6. Enseignements pratiques

FORMAT CITATIONS OBLIGATOIRE EXACT (en string simple):
<blockquote>Citation textuelle du Reddit...</blockquote>
<p>T√©moignage de [nom_utilisateur] sur [source]</p>

EXEMPLE:
<blockquote>J'ai commenc√© avec 2500‚Ç¨/mois et maintenant je gagne 12000‚Ç¨/mois</blockquote>
<p>T√©moignage de u/nomade_indonesie sur Reddit</p>

IMPORTANT: G√©n√®re les citations comme des strings simples, pas des objets JSON

Format HTML: <h2>, <h3>, <p>, <blockquote>, <ul><li>, <strong>
Longueur: 700-1000 mots
Titre en fran√ßais

R√©ponse JSON:`;

      const response = await axios.post('https://api.openai.com/v1/chat/completions', {
        model: 'gpt-4',
        messages: [{ role: 'user', content: simplePrompt }],
        max_tokens: 2000,
        temperature: 0.7,
        response_format: { type: "json_object" }
      }, {
        headers: {
          'Authorization': `Bearer ${this.apiKey}`,
          'Content-Type': 'application/json'
        }
      });

      const content = JSON.parse(response.data.choices[0].message.content);
      console.log('‚úÖ Contenu simple g√©n√©r√© avec vraies donn√©es:', Object.keys(content));
      return content;

    } catch (error) {
      console.error('‚ùå Erreur g√©n√©ration simple:', error.message);
      // Refuser de publier plut√¥t que de cr√©er du faux contenu
      throw new Error(`ERREUR TECHNIQUE: Impossible de g√©n√©rer le contenu pour "${article.title}". Refus de publier du contenu g√©n√©rique.`);
    }
  }

  // Obtenir le prompt selon le type de contenu
  getPromptByType(typeContenu, article, analysis, fullContent) {
    const basePrompt = `Tu es un expert √©ditorial pour FlashVoyages.com, sp√©cialis√© dans le voyage en Asie.

ARTICLE SOURCE COMPLET:
- Titre: ${article.title}
- Source: ${article.source}
- Contenu complet: ${fullContent.substring(0, 800)}
- Lien: ${article.link}

ANALYSE √âDITORIALE:
- Type: ${analysis.type_contenu}
- Sous-cat√©gorie: ${analysis.sous_categorie}
- Angle: ${analysis.angle}
- Audience: ${analysis.audience}
- Destination: ${analysis.destination}
- Mots-cl√©s: ${analysis.keywords}
- CTA: ${analysis.cta}

MISSION: Cr√©er un article √©ditorial de qualit√© qui transforme cette source en contenu FlashVoyages.

GUIDELINES FLASHVOYAGES:
- Cible: Digital nomades et voyageurs passionn√©s d'Asie
- Objectif: Valeur ajout√©e, conseils pratiques, √©conomies concr√®tes
- Structure: H2/H3, listes, sections, CTA
- Signature: "Cet article a √©t√© analys√© par notre √©quipe FlashVoyages ‚Äî votre sp√©cialiste du nomadisme en Asie."

INSTRUCTIONS SP√âCIFIQUES:
1. EXTRACTION DE DONN√âES: Utilise les informations sp√©cifiques de l'article source
2. PERSONNALISATION: Adapte le contenu √† l'audience cibl√©e
3. VALEUR AJOUT√âE: Ajoute des conseils pratiques et des astuces
4. STRUCTURE: Utilise des H2/H3 pour organiser, des listes pour les d√©tails
5. SP√âCIFICIT√â: √âvite les g√©n√©ralit√©s, utilise des donn√©es pr√©cises
6. LONGUEUR: MINIMUM 500 mots, ID√âAL 700-1000 mots. D√©veloppe chaque section en d√©tail avec des exemples concrets, des chiffres, des conseils actionnables

CONTENU REQUIS:
1. Titre accrocheur (sans emoji, avec mention "t√©moignage Reddit" √† la fin)
2. Introduction FOMO + Curation FlashVoyages (OBLIGATOIRE)
   Format: "Pendant que vous [action], d'autres [r√©sultat]. Chez FlashVoyages, nous avons s√©lectionn√© ce t√©moignage Reddit qui montre comment [transformation]."
   Exemples:
   - "Pendant que vous h√©sitez, d'autres agissent. Chez FlashVoyages, nous avons s√©lectionn√© ce t√©moignage Reddit qui montre comment un nomade a tripl√© ses revenus en Indon√©sie."
   - "Pendant que vous planifiez, d'autres apprennent de leurs erreurs. Nous avons analys√© ce t√©moignage Reddit qui d√©taille les erreurs √† √©viter en Tha√Ølande."
3. D√©veloppement structur√© selon le type
4. Conseils pratiques et concrets
5. CTA sp√©cifique
6. Signature FlashVoyages

FORMAT HTML OBLIGATOIRE:
- Utilise <h2> pour les titres principaux (PAS ##)
- Utilise <h3> pour les sous-titres (PAS ###)
- Utilise <p> pour les paragraphes
- Utilise <ul><li> pour les listes
- Utilise <strong> pour le gras
- JAMAIS de Markdown (##, ###, **, etc.)

R√âPONDRE UNIQUEMENT EN JSON VALIDE:`;

    // Prompts sp√©cialis√©s par type
    switch (typeContenu) {
      case 'TEMOIGNAGE_SUCCESS_STORY':
        return basePrompt + `
{
  "title": "üåç ${article.title} - T√©moignage Reddit d√©crypt√© par FlashVoyages",
  "target_audience": "${analysis.audience}",
  "ton": "Inspirant, motivant, authentique",
  "keywords": "${analysis.keywords}",
  "cta": "${analysis.cta}",
  "urgence": "${analysis.urgence}",
  "destinations": "${analysis.destination}",
  "content": "Structure: Introduction ‚Üí D√©fi ‚Üí Strat√©gie ‚Üí R√©sultats ‚Üí Conseils"
}`;

      case 'TEMOIGNAGE_ECHEC_LE√áONS':
        return basePrompt + `
{
  "title": "‚ö†Ô∏è Mon √©chec en {destination} : {erreur} et les le√ßons apprises",
  "target_audience": "${analysis.audience}",
  "ton": "Humble, pr√©ventif, √©ducatif",
  "keywords": "${analysis.keywords}",
  "cta": "${analysis.cta}",
  "urgence": "${analysis.urgence}",
  "destinations": "${analysis.destination}",
  "content": "STRUCTURE IMMERSIVE T√âMOIGNAGE (m√™me que SUCCESS_STORY):
  
  1. INTRODUCTION FOMO + CURATION (OBLIGATOIRE)
  2. T√âMOIGNAGE AVEC CITATIONS DIRECTES (OBLIGATOIRE) - 3 citations minimum
  3. TRANSITIONS NARRATEUR (OBLIGATOIRE)
  4. SC√àNES SENSORIELLES (OBLIGATOIRE)
  5. QUESTIONS RH√âTORIQUES (OBLIGATOIRE)
  6. VARIATION DU RYTHME (OBLIGATOIRE)
  7. CONTEXTE DES CITATIONS (OBLIGATOIRE)
  8. MISE EN PERSPECTIVE (OBLIGATOIRE)
  
  TON: Humble, pr√©ventif, √©ducatif. L'√©motion doit √©merger du contenu.
  FORMAT HTML: <h2>, <h3>, <p>, <blockquote>, <em>, <strong>. JAMAIS de Markdown.
  LONGUEUR: MINIMUM 700 mots, ID√âAL 900-1200 mots."
}`;

      case 'TEMOIGNAGE_TRANSITION':
        return basePrompt + `
{
  "title": "üîÑ Ma transition de {situation_avant} √† {situation_apres} en {destination}",
  "target_audience": "${analysis.audience}",
  "ton": "R√©fl√©chi, adaptatif, encourageant",
  "keywords": "${analysis.keywords}",
  "cta": "${analysis.cta}",
  "urgence": "${analysis.urgence}",
  "destinations": "${analysis.destination}",
  "content": "IMPORTANT: Analyse le contenu R√âEL de l'article source et adapte le contenu en cons√©quence.

  Si l'article parle de:
  - R√™ve r√©alis√© ‚Üí Structure: R√™ve ‚Üí D√©fis ‚Üí R√©alisation ‚Üí Conseils
  - Transition de vie ‚Üí Structure: Avant ‚Üí Pendant ‚Üí Apr√®s ‚Üí Le√ßons
  - D√©fis surmont√©s ‚Üí Structure: Probl√®me ‚Üí Solutions ‚Üí R√©sultats ‚Üí Conseils
  
  STRUCTURE:
  1. Introduction FOMO: "Pendant que vous h√©sitez, d'autres agissent. Chez FlashVoyages, nous avons s√©lectionn√© ce t√©moignage Reddit qui montre comment [transformation]."
  2. Citations directes du Reddit (3+ en <blockquote> avec attribution compl√®te)
  3. Transitions du narrateur
  4. Mise en perspective
  
  TON: R√©fl√©chi, adaptatif, encourageant. L'√©motion doit √©merger du contenu r√©el.
  FORMAT HTML: <h2>, <h3>, <p>, <blockquote>, <em>, <strong>. JAMAIS de Markdown.
  LONGUEUR: MINIMUM 700 mots, ID√âAL 900-1200 mots."
}`;

      case 'TEMOIGNAGE_COMPARAISON':
        return basePrompt + `
{
  "title": "‚öñÔ∏è {destination_a} vs {destination_b} : mon exp√©rience comparative",
  "target_audience": "${analysis.audience}",
  "ton": "Comparatif, objectif, informatif",
  "keywords": "${analysis.keywords}",
  "cta": "${analysis.cta}",
  "urgence": "${analysis.urgence}",
  "destinations": "${analysis.destination}",
  "content": "STRUCTURE IMMERSIVE T√âMOIGNAGE (m√™me que SUCCESS_STORY):
  
  1. INTRODUCTION FOMO + CURATION (OBLIGATOIRE)
  2. T√âMOIGNAGE AVEC CITATIONS DIRECTES (OBLIGATOIRE) - 3 citations minimum
  3. TRANSITIONS NARRATEUR (OBLIGATOIRE)
  4. SC√àNES SENSORIELLES (OBLIGATOIRE)
  5. QUESTIONS RH√âTORIQUES (OBLIGATOIRE)
  6. VARIATION DU RYTHME (OBLIGATOIRE)
  7. CONTEXTE DES CITATIONS (OBLIGATOIRE)
  8. MISE EN PERSPECTIVE (OBLIGATOIRE)
  
  TON: Comparatif, objectif, informatif. L'√©motion doit √©merger du contenu.
  FORMAT HTML: <h2>, <h3>, <p>, <blockquote>, <em>, <strong>. JAMAIS de Markdown.
  LONGUEUR: MINIMUM 700 mots, ID√âAL 900-1200 mots."
}`;

      case 'GUIDE_PRATIQUE':
        return basePrompt + `
{
  "title": "üìã Guide complet : {sujet} en {destination}",
  "target_audience": "${analysis.audience}",
  "ton": "Pratique, utilitaire, actionnable",
  "keywords": "${analysis.keywords}",
  "cta": "${analysis.cta}",
  "urgence": "${analysis.urgence}",
  "destinations": "${analysis.destination}",
  "content": "Structure: Introduction ‚Üí √âtapes d√©taill√©es ‚Üí Conseils ‚Üí Ressources ‚Üí Conclusion"
}`;

      case 'COMPARAISON_DESTINATIONS':
        return basePrompt + `
{
  "title": "üèÜ {destination_a} vs {destination_b} : Le guide d√©finitif pour nomades",
  "target_audience": "${analysis.audience}",
  "ton": "Analytique, objectif, informatif",
  "keywords": "${analysis.keywords}",
  "cta": "${analysis.cta}",
  "urgence": "${analysis.urgence}",
  "destinations": "${analysis.destination}",
  "content": "Structure: Introduction ‚Üí Crit√®res ‚Üí Analyse d√©taill√©e ‚Üí Tableau comparatif ‚Üí Recommandation"
}`;

      case 'ACTUALITE_NOMADE':
        return basePrompt + `
{
  "title": "{sujet} : T√©moignage Reddit et analyse FlashVoyages",
  "target_audience": "${analysis.audience}",
  "ton": "Inform√©, r√©actif, pratique, personnel",
  "keywords": "${analysis.keywords}",
  "cta": "${analysis.cta}",
  "urgence": "${analysis.urgence}",
  "destinations": "${analysis.destination}",
  "content": "IMPORTANT: G√©n√®re un article COMPLET de 500-700 mots minimum avec cette structure d√©taill√©e:
  
  <p><strong>Source :</strong> <a href=\"${article.link}\" target=\"_blank\" rel=\"noopener\">${article.title}</a> - ${article.source}</p>
  
  <h2>Le contexte du t√©moignage</h2>
  <p>D√©veloppe le contexte complet (100-150 mots): Qui est la personne? Quelle est sa situation? Pourquoi ce t√©moignage est important?</p>
  
  <h2>L'exp√©rience d√©taill√©e</h2>
  <p>D√©cris l'exp√©rience en d√©tail (150-200 mots): Les faits concrets, les chiffres, les dates, les lieux pr√©cis, les d√©fis rencontr√©s</p>
  
  <h2>Les le√ßons et conseils pratiques</h2>
  <p>Liste 5-7 conseils actionnables (150-200 mots):</p>
  <ul>
    <li>Conseil 1 avec explication d√©taill√©e</li>
    <li>Conseil 2 avec explication d√©taill√©e</li>
    <li>Conseil 3 avec explication d√©taill√©e</li>
    <li>Conseil 4 avec explication d√©taill√©e</li>
    <li>Conseil 5 avec explication d√©taill√©e</li>
  </ul>
  
  <h2>Les actions √† prendre maintenant</h2>
  <p>Donne des actions concr√®tes (100-150 mots): Que faire imm√©diatement? Quelles ressources utiliser? Comment se pr√©parer?</p>
  
  <h3>Pr√©parer votre voyage</h3>
  <p>IMPORTANT: Mentionne OBLIGATOIREMENT les aspects pratiques du voyage (50-100 mots):
  - Comment se rendre sur place (vols, routes a√©riennes)
  - O√π loger une fois sur place (types d'h√©bergement, quartiers recommand√©s)
  - Budget transport et logement estim√©
  Cela permettra d'ins√©rer des outils de comparaison utiles pour le lecteur.</p>
  
  <p><em>Cet article a √©t√© analys√© par notre √©quipe FlashVoyages ‚Äî votre sp√©cialiste du nomadisme en Asie.</em></p>"
}`;

      case 'CONSEIL_PRATIQUE':
        return basePrompt + `
{
  "title": "üí° {astuce} : Comment {b√©n√©fice} en {destination}",
  "target_audience": "${analysis.audience}",
  "ton": "Expert, confident, pratique",
  "keywords": "${analysis.keywords}",
  "cta": "${analysis.cta}",
  "urgence": "${analysis.urgence}",
  "destinations": "${analysis.destination}",
  "content": "Structure: Probl√®me ‚Üí Solution ‚Üí B√©n√©fices ‚Üí Mise en pratique ‚Üí Ressources"
}`;

      default:
        return basePrompt + `
{
  "title": "üåè {sujet} : Guide nomade pour {destination}",
  "target_audience": "${analysis.audience}",
  "ton": "Expert, confident, pratique",
  "keywords": "${analysis.keywords}",
  "cta": "${analysis.cta}",
  "urgence": "${analysis.urgence}",
  "destinations": "${analysis.destination}",
  "content": "Structure: Introduction ‚Üí D√©veloppement ‚Üí Conseils ‚Üí Conclusion"
}`;
    }
  }

  // S√©lection intelligente du contenu Reddit
  async selectSmartContent(article) {
    try {
      const fullContent = await this.extractFullContent(article);
      
      // Analyser le contenu pour extraire les √©l√©ments cl√©s
      const lines = fullContent.split('\n').filter(line => line.trim().length > 0);
      
      // Identifier les meilleures citations (phrases avec "I", "We", "My", etc.)
      const personalQuotes = lines.filter(line => 
        /^(I|We|My|Our|I'm|We're|I've|We've)/.test(line.trim()) && 
        line.length > 20 && 
        line.length < 200
      );
      
      // Identifier les d√©tails cl√©s (chiffres, r√©sultats, conseils)
      const keyDetails = lines.filter(line => 
        /\d+/.test(line) || 
        /(success|failed|learned|advice|tip|recommend|suggest)/i.test(line)
      );
      
      // Identifier le contexte essentiel (premi√®re phrase, derni√®re phrase)
      const context = [
        lines[0], // Premi√®re phrase
        lines[lines.length - 1] // Derni√®re phrase
      ].filter(Boolean);
      
      // Construire le contenu s√©lectionn√©
      const selectedContent = [
        ...context,
        ...personalQuotes.slice(0, 3), // Top 3 citations personnelles
        ...keyDetails.slice(0, 2) // Top 2 d√©tails cl√©s
      ].join('\n\n');
      
      console.log(`üéØ Contenu s√©lectionn√©: ${selectedContent.length} caract√®res (${personalQuotes.length} citations, ${keyDetails.length} d√©tails)`);
      return selectedContent;
      
    } catch (error) {
      console.log('‚ö†Ô∏è Erreur s√©lection intelligente, utilisation du contenu complet');
      return await this.extractFullContent(article);
    }
  }

  // Extraction du contenu complet (m√™me m√©thode que l'original)
  async extractFullContent(article) {
    try {
      if (!article.link || article.link.includes('news.google.com')) {
        console.log('‚ö†Ô∏è Lien Google News - Utilisation du contenu disponible');
        return article.content || 'Contenu non disponible';
      }

      console.log('üîç Extraction du contenu complet de l\'article source...');
      
      const response = await axios.get(article.link, {
        headers: {
          'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
          'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
          'Accept-Language': 'en-US,en;q=0.5',
          'Accept-Encoding': 'gzip, deflate, br',
          'DNT': '1',
          'Connection': 'keep-alive',
          'Upgrade-Insecure-Requests': '1'
        },
        timeout: 10000
      });

      const html = response.data;
      const contentMatch = html.match(/<article[^>]*>(.*?)<\/article>/s) || 
                          html.match(/<main[^>]*>(.*?)<\/main>/s) ||
                          html.match(/<div[^>]*class="[^"]*content[^"]*"[^>]*>(.*?)<\/div>/s);
      
      if (contentMatch) {
        const content = contentMatch[1]
          .replace(/<script[^>]*>.*?<\/script>/gs, '')
          .replace(/<style[^>]*>.*?<\/style>/gs, '')
          .replace(/<[^>]+>/g, ' ')
          .replace(/\s+/g, ' ')
          .trim();
        
        console.log(`‚úÖ Contenu extrait: ${content.length} caract√®res`);
        return content.substring(0, 3000);
      }

      console.log('‚ö†Ô∏è Impossible d\'extraire le contenu - Utilisation du contenu disponible');
      return article.content || 'Contenu non disponible';
    } catch (error) {
      console.log(`‚ö†Ô∏è Erreur extraction contenu: ${error.message}`);
      return article.content || 'Contenu non disponible';
    }
  }

  // Analyse de fallback quand OpenAI n'est pas disponible
  getFallbackAnalysis(article) {
    console.log('üîÑ Utilisation de l\'analyse de fallback...');
    
    const title = article.title.toLowerCase();
    const content = (article.content || '').toLowerCase();
    const text = `${title} ${content}`;
    
    // D√©tection de type de contenu
    let typeContenu = 'CONSEIL_PRATIQUE';
    if (text.includes('success') || text.includes('r√©ussite') || text.includes('doubl√©')) {
      typeContenu = 'TEMOIGNAGE_SUCCESS_STORY';
    } else if (text.includes('erreur') || text.includes('√©chec') || text.includes('mistake')) {
      typeContenu = 'TEMOIGNAGE_ECHEC_LE√áONS';
    } else if (text.includes('transition') || text.includes('changement') || text.includes('devenir')) {
      typeContenu = 'TEMOIGNAGE_TRANSITION';
    } else if (text.includes('vs') || text.includes('comparaison') || text.includes('compare')) {
      typeContenu = 'TEMOIGNAGE_COMPARAISON';
    } else if (text.includes('guide') || text.includes('comment') || text.includes('tutorial')) {
      typeContenu = 'GUIDE_PRATIQUE';
    } else if (text.includes('news') || text.includes('nouvelle') || text.includes('r√©glementation')) {
      typeContenu = 'ACTUALITE_NOMADE';
    }
    
    // D√©tection de sous-cat√©gorie
    let sousCategorie = 'g√©n√©ral';
    if (text.includes('visa') || text.includes('r√©sidence')) {
      sousCategorie = 'visa';
    } else if (text.includes('coliving') || text.includes('logement')) {
      sousCategorie = 'logement';
    } else if (text.includes('transport') || text.includes('vol')) {
      sousCategorie = 'transport';
    } else if (text.includes('sant√©') || text.includes('assurance')) {
      sousCategorie = 'sant√©';
    } else if (text.includes('budget') || text.includes('co√ªt')) {
      sousCategorie = 'finance';
    }
    
    // D√©tection d'audience
    let audience = 'nomades_generaux';
    if (text.includes('d√©butant') || text.includes('premier')) {
      audience = 'nomades_debutants';
    } else if (text.includes('expert') || text.includes('avanc√©')) {
      audience = 'nomades_experts';
    } else if (text.includes('famille')) {
      audience = 'nomades_famille';
    }
    
    return {
      type_contenu: typeContenu,
      sous_categorie: sousCategorie,
      angle: 'pratique',
      audience: audience,
      destination: this.extractDestinations(text),
      urgence: 'medium',
      keywords: this.extractKeywords(text),
      cta: 'D√©couvrez nos guides nomades Asie',
      pertinence: 70,
      recommandation: 'generation_llm',
      template_specifique: 'generic',
      raison: 'Analyse de fallback bas√©e sur les mots-cl√©s'
    };
  }

  // Extraire les mots-cl√©s du texte
  extractKeywords(text) {
    const keywords = [];
    const nomadKeywords = ['nomad', 'digital nomad', 'remote work', 'coliving', 'coworking', 'visa', 'r√©sidence', 'fiscal'];
    const asiaKeywords = ['asia', 'asie', 'vietnam', 'thailand', 'japan', 'korea', 'singapore', 'philippines', 'indonesia', 'malaysia'];
    
    nomadKeywords.forEach(keyword => {
      if (text.includes(keyword)) keywords.push(keyword);
    });
    
    asiaKeywords.forEach(keyword => {
      if (text.includes(keyword)) keywords.push(keyword);
    });
    
    return keywords.slice(0, 5).join(', ');
  }

  // Extraire les destinations du texte
  extractDestinations(text) {
    const destinations = [];
    const asiaCountries = ['vietnam', 'thailand', 'japan', 'korea', 'singapore', 'philippines', 'indonesia', 'malaysia', 'taiwan', 'hong kong'];
    
    asiaCountries.forEach(country => {
      if (text.includes(country)) destinations.push(country);
    });
    
    return destinations.length > 0 ? destinations.join(', ') : 'Asie';
  }

  // Contenu de fallback - UNIQUEMENT si erreur technique, PAS de fausses donn√©es
  getFallbackContent(article, analysis) {
    // Si erreur technique, on refuse de publier plut√¥t que de cr√©er du faux contenu
    throw new Error(`ERREUR TECHNIQUE: Impossible de g√©n√©rer le contenu pour "${article.title}". Refus de publier du contenu g√©n√©rique.`);
  }
}

export default IntelligentContentAnalyzerOptimized;

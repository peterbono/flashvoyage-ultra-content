#!/usr/bin/env node

import axios from 'axios';
import { OPENAI_API_KEY } from './config.js';

class IntelligentContentAnalyzer {
  constructor() {
    this.apiKey = OPENAI_API_KEY;
  }

  // Analyser intelligemment le contenu d'un article
  async analyzeContent(article) {
    try {
      // V√©rifier si la cl√© API est disponible
      if (!this.apiKey) {
        console.log('‚ö†Ô∏è Cl√© OpenAI non disponible - Utilisation du fallback');
        return this.getFallbackAnalysis(article);
      }
      const prompt = `Tu es un expert √©ditorial pour FlashVoyages.com, sp√©cialis√© dans le voyage en Asie.

ARTICLE √Ä ANALYSER:
- Titre: ${article.title}
- Source: ${article.source}
- Type: ${article.type}
- Contenu: ${article.content}
- Lien: ${article.link}

MISSION: Analyser ce contenu et d√©terminer la meilleure approche √©ditoriale.

GUIDELINES FLASHVOYAGES:
- Cible: Digital nomades et voyageurs passionn√©s d'Asie
- Sp√©cialit√©s: Bons plans, formalit√©s, transports, s√©curit√©, tourisme
- Objectif: Contenu unique, valeur ajout√©e, √©conomies concr√®tes
- Ton: Expert, confident, proche (comme Voyage Pirate mais pour l'Asie)

ANALYSE REQUISE:
1. Cat√©gorie √©ditoriale (nomade_visa, nomade_coliving, nomade_budget, nomade_communaute, voyage_asie, voyage_general, etc.)
2. Angle √©ditorial principal (pratique, comparatif, analyse, conseil, etc.)
3. Niveau d'urgence (high, medium, low)
4. Audience cible sp√©cifique
5. Mots-cl√©s pertinents
6. CTA appropri√©
7. Destinations concern√©es
8. Score de pertinence (0-100)
9. Recommandation: template_fixe OU generation_llm

R√©ponds UNIQUEMENT en JSON valide:
{
  "categorie": "nomade_communaute",
  "angle": "comparatif",
  "urgence": "medium",
  "audience": "Digital nomades h√©sitant entre r√©gions",
  "keywords": "nomade, asie, am√©rique latine, comparaison, choix destination",
  "cta": "D√©couvrez notre guide complet Asie vs Am√©rique Latine",
  "destinations": "Asie du Sud-Est, Am√©rique Latine",
  "pertinence": 85,
  "recommandation": "generation_llm",
  "raison": "Question complexe n√©cessitant analyse comparative approfondie"
}`;

      const response = await axios.post('https://api.openai.com/v1/chat/completions', {
        model: 'gpt-4',
        messages: [{ role: 'user', content: prompt }],
        max_tokens: 500,
        temperature: 0.3
      }, {
        headers: {
          'Authorization': `Bearer ${this.apiKey}`,
          'Content-Type': 'application/json'
        }
      });

      const analysis = JSON.parse(response.data.choices[0].message.content);
      return analysis;

    } catch (error) {
      console.error('‚ùå Erreur analyse intelligente:', error.message);
      return this.getFallbackAnalysis(article);
    }
  }

  // Analyse de fallback quand OpenAI n'est pas disponible
  getFallbackAnalysis(article) {
    console.log('üîÑ Utilisation de l\'analyse de fallback...');
    
    // Analyse basique bas√©e sur les mots-cl√©s
    const title = article.title.toLowerCase();
    const content = (article.content || '').toLowerCase();
    const text = `${title} ${content}`;
    
    // D√©tection de cat√©gorie
    let category = 'voyage_general';
    if (text.includes('nomad') || text.includes('digital nomad') || text.includes('remote work')) {
      category = 'nomade_asie';
    } else if (text.includes('visa') || text.includes('residence') || text.includes('fiscal')) {
      category = 'nomade_asie';
    } else if (text.includes('coliving') || text.includes('coworking')) {
      category = 'nomade_asie';
    }
    
    // D√©tection d'angle
    let angle = 'informatif';
    if (text.includes('comparaison') || text.includes('vs') || text.includes('match')) {
      angle = 'comparatif';
    } else if (text.includes('guide') || text.includes('comment') || text.includes('tutorial')) {
      angle = 'pratique';
    }
    
    // Recommandation
    let recommendation = 'template_fixe';
    if (category === 'nomade_asie' && text.includes('visa')) {
      recommendation = 'llm_generation';
    }
    
    return {
      category,
      angle,
      audience: 'Digital nomades et voyageurs Asie',
      keywords: this.extractKeywords(text),
      cta: 'D√©couvrez nos guides nomades Asie',
      destinations: this.extractDestinations(text),
      recommendation,
      confidence: 0.6,
      reason: 'Analyse de fallback bas√©e sur les mots-cl√©s'
    };
  }

  // Extraire les mots-cl√©s du texte
  extractKeywords(text) {
    const keywords = [];
    const nomadKeywords = ['nomad', 'digital nomad', 'remote work', 'coliving', 'coworking', 'visa', 'residence', 'fiscal'];
    const asiaKeywords = ['asia', 'asie', 'vietnam', 'thailand', 'japan', 'korea', 'singapore', 'philippines', 'indonesia', 'malaysia'];
    
    nomadKeywords.forEach(keyword => {
      if (text.includes(keyword)) keywords.push(keyword);
    });
    
    asiaKeywords.forEach(keyword => {
      if (text.includes(keyword)) keywords.push(keyword);
    });
    
    return keywords.slice(0, 5); // Max 5 mots-cl√©s
  }

  // Extraire les destinations du texte
  extractDestinations(text) {
    const destinations = [];
    const asiaCountries = ['vietnam', 'thailand', 'japan', 'korea', 'singapore', 'philippines', 'indonesia', 'malaysia', 'taiwan', 'hong kong'];
    
    asiaCountries.forEach(country => {
      if (text.includes(country)) destinations.push(country);
    });
    
    return destinations.length > 0 ? destinations.join(', ') : 'Asie';
  }

  // Extraire le contenu complet de l'article source
  async extractFullContent(article) {
    try {
      if (!article.link || article.link.includes('news.google.com')) {
        console.log('‚ö†Ô∏è Lien Google News - Utilisation du contenu disponible');
        return article.content || 'Contenu non disponible';
      }

      console.log('üîç Extraction du contenu complet de l\'article source...');
      
      const response = await axios.get(article.link, {
        headers: {
          'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
          'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
          'Accept-Language': 'en-US,en;q=0.5',
          'Accept-Encoding': 'gzip, deflate, br',
          'DNT': '1',
          'Connection': 'keep-alive',
          'Upgrade-Insecure-Requests': '1'
        },
        timeout: 10000
      });

      // Extraction simple du contenu principal
      const html = response.data;
      const contentMatch = html.match(/<article[^>]*>(.*?)<\/article>/s) || 
                          html.match(/<main[^>]*>(.*?)<\/main>/s) ||
                          html.match(/<div[^>]*class="[^"]*content[^"]*"[^>]*>(.*?)<\/div>/s);
      
      if (contentMatch) {
        // Nettoyer le HTML et extraire le texte
        const content = contentMatch[1]
          .replace(/<script[^>]*>.*?<\/script>/gs, '')
          .replace(/<style[^>]*>.*?<\/style>/gs, '')
          .replace(/<[^>]+>/g, ' ')
          .replace(/\s+/g, ' ')
          .trim();
        
        console.log(`‚úÖ Contenu extrait: ${content.length} caract√®res`);
        return content.substring(0, 3000); // Limiter √† 3000 caract√®res
      }

      console.log('‚ö†Ô∏è Impossible d\'extraire le contenu - Utilisation du contenu disponible');
      return article.content || 'Contenu non disponible';
    } catch (error) {
      console.log(`‚ö†Ô∏è Erreur extraction contenu: ${error.message}`);
      return article.content || 'Contenu non disponible';
    }
  }

  // G√©n√©rer du contenu intelligent avec LLM
  async generateIntelligentContent(article, analysis) {
    try {
      // Extraire le contenu complet de l'article source
      const fullContent = await this.extractFullContent(article);
      
      const prompt = `Tu es un expert √©ditorial pour FlashVoyages.com, sp√©cialis√© dans le voyage en Asie.

ARTICLE SOURCE COMPLET:
- Titre: ${article.title}
- Source: ${article.source}
- Contenu complet: ${fullContent}
- Lien: ${article.link}

ANALYSE √âDITORIALE:
- Cat√©gorie: ${analysis.categorie}
- Angle: ${analysis.angle}
- Audience: ${analysis.audience}
- Mots-cl√©s: ${analysis.keywords}
- CTA: ${analysis.cta}
- Destinations: ${analysis.destinations}

MISSION: Cr√©er un article √©ditorial de qualit√© qui transforme cette source en contenu FlashVoyages.

GUIDELINES FLASHVOYAGES:
- Cible: Digital nomades et voyageurs passionn√©s d'Asie
- Style: Expert, data-driven, avec des conseils pratiques concrets
- Ton: Professionnel mais accessible, avec une touche personnelle
- Structure: Introduction engageante, d√©veloppement d√©taill√©, conclusion actionnable
- Ton: Expert, confident, proche, conversationnel
- Style: Comme Voyage Pirate mais pour l'Asie
- Objectif: Valeur ajout√©e, conseils pratiques, √©conomies concr√®tes
- Structure: H5, listes, sections, CTA

INSTRUCTIONS SP√âCIFIQUES:
1. EXTRACTION DE DONN√âES: Utilise les informations sp√©cifiques de l'article source (prix, dates, lieux, d√©tails concrets)
2. PERSONNALISATION: Adapte le contenu √† l'audience nomade asiatique
3. VALEUR AJOUT√âE: Ajoute des conseils pratiques, des alternatives, des astuces
4. STRUCTURE: Utilise des H5 pour organiser, des listes pour les d√©tails, des CTA pour l'action
5. SP√âCIFICIT√â: √âvite les g√©n√©ralit√©s, utilise des donn√©es pr√©cises de l'article source

CONTENU REQUIS:
1. Titre accrocheur avec emoji
2. Introduction personnalis√©e
3. Analyse du sujet avec angle FlashVoyages
4. Conseils pratiques et concrets
5. Comparaison si pertinent
6. CTA sp√©cifique
7. Signature FlashVoyages

R√©ponds UNIQUEMENT en JSON valide:
{
  "title": "üåè Asie vs Am√©rique Latine : Le Guide D√©finitif pour Digital Nomades",
  "target_audience": "Digital nomades h√©sitant entre r√©gions",
  "ton": "Expert, confident, pratique",
  "keywords": "nomade, asie, am√©rique latine, comparaison, choix destination",
  "cta": "D√©couvrez notre guide complet Asie vs Am√©rique Latine",
  "urgence": "medium",
  "destinations": "Asie du Sud-Est, Am√©rique Latine",
  "content": "<p><strong>Source :</strong> <a href=\\"${article.link}\\" target=\\"_blank\\" rel=\\"noopener\\">${article.title}</a> - ${article.source}</p>\\n\\n<p>Salut nomade ! Si tu h√©sites entre l'Asie et l'Am√©rique Latine pour ton prochain s√©jour prolong√©, cette question Reddit va t'aider √† y voir plus clair. Chez FlashVoyages, on conna√Æt bien les deux r√©gions et on va te donner notre analyse d'experts.</p>\\n\\n<h5>Pourquoi cette question est cruciale pour toi</h5>\\n<p>Choisir entre l'Asie et l'Am√©rique Latine, c'est pas juste une question de pr√©f√©rence. C'est un choix qui va impacter ton budget, ton style de vie, et tes opportunit√©s professionnelles pendant des mois.</p>\\n\\n<p>On a analys√© les r√©ponses de la communaut√© nomade et on va te donner notre perspective FlashVoyages, bas√©e sur notre exp√©rience terrain.</p>\\n\\n<h5>Notre analyse FlashVoyages : Asie vs Am√©rique Latine</h5>\\n<p>Voici ce que nos experts pensent :</p>\\n\\n<ul>\\n<li><strong>Asie du Sud-Est :</strong> Meilleur rapport qualit√©-prix, infrastructure nomade d√©velopp√©e, communaut√© active</li>\\n<li><strong>Am√©rique Latine :</strong> Culture plus proche, langue plus accessible, horaires compatibles Europe</li>\\n<li><strong>Budget :</strong> Asie gagne sur le co√ªt de la vie, Am√©rique Latine sur les vols</li>\\n<li><strong>Visa :</strong> Asie plus flexible, Am√©rique Latine plus restrictive</li>\\n</ul>\\n\\n<h5>Notre conseil FlashVoyages</h5>\\n<p>Commence par l'Asie si tu veux maximiser ton budget et d√©couvrir une culture totalement diff√©rente. Choisis l'Am√©rique Latine si tu pr√©f√®res une transition plus douce et des horaires compatibles avec l'Europe.</p>\\n\\n<h5>Contexte nomade</h5>\\n<p>Les deux r√©gions offrent des opportunit√©s incroyables pour les digital nomades. L'important, c'est de choisir selon tes priorit√©s : budget, culture, ou opportunit√©s professionnelles.</p>\\n\\n<h5>Notre analyse</h5>\\n<p><strong>Score FlashVoyages :</strong> ${analysis.pertinence}/100 ‚Äî Question cruciale pour nomades</p>\\n<p><strong>Pourquoi c'est important :</strong> Impact direct sur ton exp√©rience nomade</p>\\n<p><strong>Action recommand√©e :</strong> Tester les deux r√©gions si possible</p>\\n\\n<p><em>Cet article a √©t√© analys√© par notre √©quipe FlashVoyages ‚Äî ton sp√©cialiste du nomadisme en Asie.</em></p>"
}`;

      const response = await axios.post('https://api.openai.com/v1/chat/completions', {
        model: 'gpt-4',
        messages: [{ role: 'user', content: prompt }],
        max_tokens: 2000,
        temperature: 0.7
      }, {
        headers: {
          'Authorization': `Bearer ${this.apiKey}`,
          'Content-Type': 'application/json'
        }
      });

      const rawContent = response.data.choices[0].message.content;
      console.log('üîç R√©ponse LLM brute:', rawContent.substring(0, 200) + '...');
      
      const content = JSON.parse(rawContent);
      console.log('‚úÖ Contenu pars√©:', Object.keys(content));
      return content;

    } catch (error) {
      console.error('‚ùå Erreur g√©n√©ration intelligente:', error.message);
      return this.getFallbackContent(article, analysis);
    }
  }

  // Analyse de fallback
  getFallbackAnalysis(article) {
    return {
      categorie: 'voyage_general',
      angle: 'informatif',
      urgence: 'low',
      audience: 'Voyageurs g√©n√©raux',
      keywords: 'voyage, information, conseils',
      cta: 'D√©couvrez nos conseils voyage',
      destinations: 'Divers',
      pertinence: 50,
      recommandation: 'template_fixe',
      raison: 'Analyse LLM indisponible'
    };
  }

  // Contenu de fallback
  getFallbackContent(article, analysis) {
    return {
      title: `üì∞ ${article.title} - FlashVoyages`,
      target_audience: analysis.audience,
      ton: 'Informatif, neutre',
      keywords: analysis.keywords,
      cta: analysis.cta,
      urgence: analysis.urgence,
      destinations: analysis.destinations,
      content: `<p><strong>Source :</strong> <a href="${article.link}" target="_blank" rel="noopener">${article.title}</a> - ${article.source}</p>

<p>Bonjour ! Si tu cherches des informations utiles, cette actualit√© pourrait t'int√©resser. Chez FlashVoyages, on partage des informations qui nous semblent pertinentes.</p>

<h5>Pourquoi cette info est pertinente</h5>
<p>Cette information sur ${article.type} est une actualit√© g√©n√©rale qui peut avoir un impact sur divers aspects de vos voyages.</p>

<p>Nous la relayons pour vous tenir au courant des faits marquants qui pourraient vous concerner.</p>

<h5>Ce qu'il faut savoir</h5>
<p>Voici les points cl√©s :</p>

<ul>
<li><strong>${article.type} :</strong> ${article.content}</li>
<li><strong>Validit√© :</strong> Information r√©cente - Source ${article.source}</li>
<li><strong>Pour qui :</strong> Tous les lecteurs int√©ress√©s</li>
<li><strong>B√©n√©fices :</strong> Information g√©n√©rale, mise √† jour</li>
</ul>

<h5>Notre point de vue FlashVoyages</h5>
<p>Nous vous invitons √† consulter la source originale pour plus de d√©tails. Notre objectif est de vous fournir un aper√ßu rapide et pertinent.</p>

<p><em>Cet article a √©t√© analys√© par notre √©quipe FlashVoyages.</em></p>`
    };
  }

  // Valider le contenu g√©n√©r√©
  validateGeneratedContent(llmContent, sourceArticle) {
    const validation = {
      score: 0,
      issues: [],
      strengths: []
    };

    // V√©rifier la longueur du contenu
    if (llmContent.content && llmContent.content.length > 500) {
      validation.score += 20;
      validation.strengths.push('Contenu de longueur appropri√©e');
    } else {
      validation.issues.push('Contenu trop court');
    }

    // V√©rifier la pr√©sence de donn√©es sp√©cifiques
    const hasSpecificData = /(\d+|\$|‚Ç¨|%|km|m¬≤|heures?|jours?|mois?|ann√©es?)/.test(llmContent.content || '');
    if (hasSpecificData) {
      validation.score += 25;
      validation.strengths.push('Contient des donn√©es sp√©cifiques');
    } else {
      validation.issues.push('Manque de donn√©es sp√©cifiques');
    }

    // V√©rifier la structure (pr√©sence de H5)
    const hasStructure = /<h5>/.test(llmContent.content || '');
    if (hasStructure) {
      validation.score += 15;
      validation.strengths.push('Structure bien organis√©e');
    } else {
      validation.issues.push('Structure manquante');
    }

    // V√©rifier la pertinence nomade
    const nomadKeywords = ['nomade', 'digital nomad', 'remote work', 'coworking', 'coliving', 'visa', 'residence'];
    const hasNomadContent = nomadKeywords.some(keyword => 
      (llmContent.content || '').toLowerCase().includes(keyword)
    );
    if (hasNomadContent) {
      validation.score += 20;
      validation.strengths.push('Contenu pertinent pour les nomades');
    } else {
      validation.issues.push('Manque de pertinence nomade');
    }

    // V√©rifier la pr√©sence d'un CTA
    if (llmContent.cta && llmContent.cta.length > 10) {
      validation.score += 10;
      validation.strengths.push('CTA pr√©sent et engageant');
    } else {
      validation.issues.push('CTA manquant ou trop court');
    }

    // V√©rifier l'√©vitement des g√©n√©ralit√©s
    const genericPhrases = ['pays √† d√©finir', 'lieu √† pr√©ciser', 'information non disponible'];
    const hasGenericContent = genericPhrases.some(phrase => 
      (llmContent.content || '').toLowerCase().includes(phrase)
    );
    if (!hasGenericContent) {
      validation.score += 10;
      validation.strengths.push('√âvite les g√©n√©ralit√©s');
    } else {
      validation.issues.push('Contient des g√©n√©ralit√©s √† √©viter');
    }

    validation.score = Math.min(validation.score, 100);
    
    console.log(`üìä Validation contenu: ${validation.score}/100`);
    if (validation.issues.length > 0) {
      console.log(`‚ö†Ô∏è Probl√®mes: ${validation.issues.join(', ')}`);
    }
    if (validation.strengths.length > 0) {
      console.log(`‚úÖ Points forts: ${validation.strengths.join(', ')}`);
    }

    return validation;
  }
}

export default IntelligentContentAnalyzer;

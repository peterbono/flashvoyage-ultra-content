#!/usr/bin/env node

import axios from 'axios';
import dotenv from 'dotenv';
import { translate } from '@vitalets/google-translate-api';
import UltraFreshComplete from './ultra-fresh-complete.js';
import ContentValidator from './content-validator.js';
import ContentTemplates from './content-templates-fixed.js';
import NomadePersonaDetector from './nomade-persona-detector.js';
// import NomadeTemplates from './nomade-templates.js'; // Supprim√© - remplac√© par nomade-asia-templates.js
import NomadeAsiaTemplates from './nomade-asia-templates.js';
import EnhancedNomadeTemplates from './enhanced-nomade-templates.js';
import IntelligentArticleFilter from './intelligent-article-filter.js';
import GenericTemplates from './generic-templates.js';
import IntelligentContentAnalyzer from './intelligent-content-analyzer.js';

dotenv.config();

const WORDPRESS_URL = process.env.WORDPRESS_URL;
const WORDPRESS_USERNAME = process.env.WORDPRESS_USERNAME;
const WORDPRESS_APP_PASSWORD = process.env.WORDPRESS_APP_PASSWORD;
const PEXELS_API_KEY = process.env.PEXELS_API_KEY;
const OPENAI_API_KEY = process.env.OPENAI_API_KEY;

// V√©rification des variables d'environnement requises
if (!WORDPRESS_URL || !WORDPRESS_USERNAME || !WORDPRESS_APP_PASSWORD || !PEXELS_API_KEY) {
  console.error('‚ùå Variables d\'environnement manquantes. V√©rifiez votre fichier .env');
  process.exit(1);
}

console.log('üéØ ULTRA-STRATEGIC GENERATOR - Positionnement FlashVoyages optimis√©\n');

class UltraStrategicGenerator {
  constructor() {
    this.scraper = new UltraFreshComplete();
    this.publishedArticles = new Set();
    this.validator = new ContentValidator();
    this.templates = new ContentTemplates();
    this.nomadeDetector = new NomadePersonaDetector();
    // this.nomadeTemplates = new NomadeTemplates(); // Supprim√© - remplac√© par nomade-asia-templates.js
    this.nomadeAsiaTemplates = new NomadeAsiaTemplates();
    this.enhancedTemplates = new EnhancedNomadeTemplates();
    
    // Mode intelligent toujours activ√©
    this.intelligentFilter = new IntelligentArticleFilter();
    this.genericTemplates = new GenericTemplates();
    this.intelligentAnalyzer = new IntelligentContentAnalyzer();
    console.log('üß† Mode intelligent activ√© par d√©faut');
  }

  // Charger les articles d√©j√† publi√©s
  async loadPublishedArticles() {
    try {
      console.log('üìö Chargement des articles d√©j√† publi√©s...');
      
      let allArticles = [];
      let page = 1;
      const perPage = 100;
      
      // R√©cup√©rer tous les articles (plusieurs pages)
      while (true) {
        const response = await axios.get(`${WORDPRESS_URL}/wp-json/wp/v2/posts?per_page=${perPage}&page=${page}&status=publish`, {
          auth: {
            username: WORDPRESS_USERNAME,
            password: WORDPRESS_APP_PASSWORD
          },
          timeout: 15000,
          headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json'
          }
        });
        
        if (!response.data || !Array.isArray(response.data) || response.data.length === 0) {
          break;
        }
        
        allArticles = allArticles.concat(response.data);
        page++;
        
        // Limiter √† 10 pages max (1000 articles) pour √©viter les timeouts
        if (page > 10) break;
      }
      
      // Analyser les titres et extraire les mots-cl√©s
      allArticles.forEach(post => {
        if (post.title && post.title.rendered) {
          const title = post.title.rendered.toLowerCase().trim();
          this.publishedArticles.add(title);
          
          // Extraire les mots-cl√©s principaux du titre
          const keywords = title.match(/\b(visa|nomade|asie|pays|top|guide|comment|o√π|quand|pourquoi)\b/g);
          if (keywords) {
            keywords.forEach(keyword => this.publishedArticles.add(keyword));
          }
        }
      });
      
      console.log(`‚úÖ ${allArticles.length} articles analys√©s, ${this.publishedArticles.size} √©l√©ments uniques charg√©s`);
    } catch (error) {
      console.warn('‚ö†Ô∏è Impossible de charger les articles existants:', error.message);
    }
  }

  // V√©rifier si l'article est d√©j√† publi√©
  isArticleAlreadyPublished(title) {
    const normalizedTitle = title.toLowerCase().trim();
    
    // V√©rification exacte
    if (this.publishedArticles.has(normalizedTitle)) {
      return true;
    }
    
    // V√©rification de similarit√© (√©viter les variations du m√™me sujet)
    const titleWords = normalizedTitle.split(/\s+/);
    const commonWords = ['visa', 'nomade', 'asie', 'pays', 'top', 'guide', 'comment', 'o√π', 'quand', 'pourquoi'];
    
    for (const publishedTitle of this.publishedArticles) {
      const publishedWords = publishedTitle.split(/\s+/);
      
      // Compter les mots en commun
      const commonCount = titleWords.filter(word => 
        publishedWords.includes(word) && commonWords.includes(word)
      ).length;
      
      // Si plus de 3 mots-cl√©s en commun, consid√©rer comme similaire
      if (commonCount >= 3) {
        console.log(`‚ö†Ô∏è Article similaire d√©tect√©: "${publishedTitle}" vs "${normalizedTitle}"`);
        return true;
      }
    }
    
    return false;
  }

  // G√©n√©rer un contenu strat√©gique avec GPT-4
  async generateStrategicContent(article) {
    try {
      console.log('üß† G√©n√©ration de contenu strat√©gique intelligente...');
      
      // D√©tecter si c'est une question de comparaison Vietnam/Indon√©sie
      const isVietnamIndonesiaQuestion = this.isVietnamIndonesiaQuestion(article);
      
      if (isVietnamIndonesiaQuestion) {
        console.log('üå¥ D√©tection question Vietnam vs Indon√©sie - Utilisation template am√©lior√©');
        return this.enhancedTemplates.generateComparisonTemplate(article);
      }
      
      // 1. Analyse intelligente avec LLM
      console.log('üß† Analyse intelligente du contenu...');
      const intelligentAnalysis = await this.intelligentAnalyzer.analyzeContent(article);
      console.log(`üìä Analyse LLM: ${intelligentAnalysis.pertinence}/100`);
      console.log(`   Cat√©gorie: ${intelligentAnalysis.categorie}`);
      console.log(`   Angle: ${intelligentAnalysis.angle}`);
      console.log(`   Recommandation: ${intelligentAnalysis.recommandation}`);
      console.log(`   Raison: ${intelligentAnalysis.raison}`);
      
      // 2. G√©n√©rer le contenu selon la recommandation
      if (intelligentAnalysis.recommandation === 'generation_llm') {
        console.log('ü§ñ G√©n√©ration intelligente avec LLM...');
        const llmContent = await this.intelligentAnalyzer.generateIntelligentContent(article, intelligentAnalysis);
        return this.normalizeLLMContent(llmContent, article);
      } else {
        console.log('üìù Utilisation des templates fixes...');
        return this.generateGenericContent(article, intelligentAnalysis.categorie, intelligentAnalysis);
      }

    } catch (error) {
      console.warn('‚ö†Ô∏è Erreur g√©n√©ration intelligente, utilisation du fallback:', error.message);
      return this.generateFallbackContent(article);
    }
  }

  // D√©tecter si c'est une question de comparaison Vietnam/Indon√©sie
  isVietnamIndonesiaQuestion(article) {
    const text = `${article.title} ${article.content}`.toLowerCase();
    return text.includes('vietnam') && text.includes('indonesia') && 
           (text.includes('november') || text.includes('novembre') || text.includes('choosing') || text.includes('choisir'));
  }

  // Normaliser le contenu LLM pour le format attendu
  normalizeLLMContent(llmContent, sourceArticle = null) {
    console.log('üîç Contenu LLM brut:', Object.keys(llmContent));
    
    let finalContent = '';
    
    // Construire le contenu final en combinant toutes les parties
    if (llmContent.intro) {
      finalContent += llmContent.intro + '\n\n';
    }
    
    if (llmContent.content) {
      finalContent += llmContent.content + '\n\n';
    }
    
    if (llmContent.signature) {
      finalContent += llmContent.signature + '\n\n';
    }
    
    if (llmContent.cta && !finalContent.includes(llmContent.cta)) {
      finalContent += `<p><strong>üëâ ${llmContent.cta}</strong></p>\n\n`;
    }
    
    // Si on n'a pas de contenu final, utiliser le contenu de base
    if (!finalContent.trim()) {
      finalContent = llmContent.content || 'Contenu non disponible';
    }
    
    console.log('‚úÖ Contenu normalis√©:', finalContent.substring(0, 100) + '...');
    
    // Valider le contenu si on a l'article source
    let validation = null;
    if (sourceArticle) {
      validation = this.intelligentAnalyzer.validateGeneratedContent(llmContent, sourceArticle);
    }
    
    return {
      ...llmContent,
      content: finalContent.trim(),
      validation: validation
    };
  }

  // G√©n√©rer du contenu g√©n√©rique avec templates adaptatifs
  generateGenericContent(article, templateName, relevanceAnalysis) {
    try {
      console.log(`üìù G√©n√©ration de contenu g√©n√©rique avec template: ${templateName}`);
      
      // Utiliser les templates g√©n√©riques
      const genericContent = this.genericTemplates.fillTemplate(templateName, article);
      
      // Valider le contenu g√©n√©r√©
      const validation = this.validator.validateArticle({
        title: genericContent.title,
        content: genericContent.content,
        type: article.type
      });
      
      if (!validation.isValid) {
        console.warn('‚ö†Ô∏è Erreurs de validation d√©tect√©es:', validation.errors);
      }
      
      return {
        title: genericContent.title,
        target_audience: genericContent.target_audience,
        ton: genericContent.ton,
        keywords: genericContent.keywords,
        cta: genericContent.cta,
        urgence: genericContent.urgence,
        destinations: genericContent.destinations,
        economic_value: this.getGenericEconomicValue(templateName, relevanceAnalysis),
        content: genericContent.content,
        expertise_score: this.getGenericExpertiseScore(relevanceAnalysis),
        validation: validation
      };
      
    } catch (error) {
      console.warn('‚ö†Ô∏è Erreur g√©n√©ration g√©n√©rique, utilisation du fallback:', error.message);
      return this.generateFallbackContent(article);
    }
  }

  // Obtenir la valeur √©conomique pour les templates g√©n√©riques
  getGenericEconomicValue(templateName, relevanceAnalysis) {
    const economicValues = {
      'voyage_general': '√âconomies potentielles: 200-800‚Ç¨ par voyage',
      'asie_general': '√âconomies potentielles: 300-1000‚Ç¨ par voyage en Asie',
      'general': 'Information utile pour optimiser vos voyages'
    };
    
    return economicValues[templateName] || 'Information utile pour vos voyages';
  }

  // Obtenir le score d'expertise pour les templates g√©n√©riques
  getGenericExpertiseScore(relevanceAnalysis) {
    if (relevanceAnalysis.relevancePercentage > 80) return "9/10";
    if (relevanceAnalysis.relevancePercentage > 60) return "8/10";
    if (relevanceAnalysis.relevancePercentage > 40) return "7/10";
    return "6/10";
  }

  // G√©n√©rer du contenu nomade Asie avec templates vari√©s
  generateNomadeAsiaContent(article, templateName, relevanceAnalysis) {
    try {
      console.log(`üè† G√©n√©ration de contenu nomade Asie avec template: ${templateName}`);
      
      // Utiliser les templates nomades Asie vari√©s
      const nomadeContent = this.nomadeAsiaTemplates.fillTemplate(templateName, article);
      
      // Valider le contenu g√©n√©r√©
      const validation = this.validator.validateArticle({
        title: nomadeContent.title,
        content: nomadeContent.content,
        type: article.type
      });
      
      if (!validation.isValid) {
        console.warn('‚ö†Ô∏è Erreurs de validation d√©tect√©es:', validation.errors);
      }
      
      return {
        title: nomadeContent.title,
        target_audience: nomadeContent.target_audience,
        economic_value: this.getNomadeAsiaEconomicValue(templateName, relevanceAnalysis),
        content: nomadeContent.content,
        cta: nomadeContent.cta,
        expertise_score: this.getNomadeAsiaExpertiseScore(relevanceAnalysis),
        validation: validation
      };
      
    } catch (error) {
      console.warn('‚ö†Ô∏è Erreur g√©n√©ration nomade Asie, utilisation du fallback:', error.message);
      return this.generateFallbackContent(article);
    }
  }

  // Obtenir la valeur √©conomique pour les templates nomades Asie
  getNomadeAsiaEconomicValue(templateName, relevanceAnalysis) {
    const economicValues = {
      'nomade_hebergement': '√âconomies potentielles: 200-800‚Ç¨ par mois + communaut√© active',
      'nomade_visa': '√âconomies potentielles: 100-500‚Ç¨ en frais administratifs + stabilit√©',
      'nomade_budget': '√âconomies potentielles: 200-600‚Ç¨ par mois + qualit√© de vie',
      'nomade_communaute': 'Valeur ajout√©e: Networking, opportunit√©s, bien-√™tre',
      'nomade_tech': '√âconomies potentielles: 100-500‚Ç¨ vs Europe + innovation'
    };
    
    return economicValues[templateName] || '√âconomies potentielles: 300-800‚Ç¨ par mois';
  }

  // Obtenir le score d'expertise pour les templates nomades Asie
  getNomadeAsiaExpertiseScore(relevanceAnalysis) {
    if (relevanceAnalysis.relevancePercentage > 80) return "9/10";
    if (relevanceAnalysis.relevancePercentage > 60) return "8/10";
    if (relevanceAnalysis.relevancePercentage > 40) return "7/10";
    return "6/10";
  }

  // G√©n√©rer du contenu nomade sp√©cialis√©
  async generateNomadeContent(article, personaDetection) {
    try {
      console.log(`üè† G√©n√©ration de contenu nomade pour: ${personaDetection.persona}`);
      
      // Utiliser les templates nomades
      const nomadeContent = this.nomadeAsiaTemplates.fillTemplate(personaDetection.persona, article);
      
      // Valider le contenu g√©n√©r√©
      const validation = this.validator.validateArticle({
        title: nomadeContent.title,
        content: nomadeContent.content,
        type: article.type
      });
      
      if (!validation.isValid) {
        console.warn('‚ö†Ô∏è Erreurs de validation d√©tect√©es:', validation.errors);
      }
      
      return {
        title: nomadeContent.title,
        target_audience: nomadeContent.target_audience,
        economic_value: this.getNomadeEconomicValue(personaDetection.persona),
        content: nomadeContent.content,
        cta: nomadeContent.cta,
        expertise_score: "9/10"
      };
      
    } catch (error) {
      console.warn('‚ö†Ô∏è Erreur g√©n√©ration nomade, utilisation du fallback:', error.message);
      return this.generateFallbackContent(article);
    }
  }

  // Obtenir la valeur √©conomique pour les nomades
  getNomadeEconomicValue(persona) {
    const economicValues = {
      'nomade_coliving_visa_asie': '√âconomies potentielles: 500-1500‚Ç¨ par mois + visa simplifi√©',
      'nomade_coliving_asie': '√âconomies potentielles: 300-800‚Ç¨ par mois + communaut√© active',
      'nomade_visa_asie': '√âconomies potentielles: 200-500‚Ç¨ en frais administratifs + d√©marches simplifi√©es',
      'nomade_budget_asie': '√âconomies potentielles: 200-600‚Ç¨ par mois + s√©jour prolong√© possible'
    };
    
    return economicValues[persona] || '√âconomies potentielles: 300-800‚Ç¨ par mois';
  }

  // Contenu de fallback si GPT-4 √©choue
  generateFallbackContent(article) {
    try {
      // Utiliser les templates structur√©s
      const templateType = this.getTemplateType(article.type);
      const content = this.templates.generateContent(templateType, article);
      
      // Valider le contenu g√©n√©r√©
      const validation = this.validator.validateArticle({
        title: content.title,
        content: content.content,
        type: article.type
      });
      
      if (!validation.isValid) {
        console.warn('‚ö†Ô∏è Erreurs de validation d√©tect√©es:', validation.errors);
        // Utiliser le contenu malgr√© les erreurs, mais les logger
      }
      
      return {
        title: content.title,
        target_audience: "Voyageurs fran√ßais passionn√©s d'Asie (budget 2000-5000‚Ç¨/voyage)",
        economic_value: content.economicValue,
        content: content.content,
        cta: "R√©serve maintenant pour profiter de cette offre",
        expertise_score: "8/10",
        validation: validation
      };
    } catch (error) {
      console.warn('‚ö†Ô∏è Erreur template, utilisation du fallback basique:', error.message);
      return this.generateBasicFallback(article);
    }
  }

  // Fallback basique en cas d'erreur de template
  generateBasicFallback(article) {
    const validityPeriod = this.getValidityPeriod(article);
    
    return {
      title: `üî• URGENT : ${article.title.replace(/^[üî•üö®‚ö°üéØ]+/, '').trim()}`,
      target_audience: "Voyageurs fran√ßais passionn√©s d'Asie (budget 2000-5000‚Ç¨/voyage)",
      economic_value: "√âconomies potentielles: 300-800‚Ç¨ par voyage",
      content: `
<p><strong>Source :</strong> <a href="${article.link}" target="_blank" rel="noopener">${article.title}</a> - ${article.source}</p>

<p>Si tu es un voyageur fran√ßais qui r√™ve d'Asie, cette info va changer ton prochain voyage. Chez FlashVoyages, on d√©niche les bons plans qui valent le d√©tour.</p>

<h5>Pourquoi cette info est cruciale pour toi</h5>
<p>Cette nouvelle sur ${article.type} en Asie, c'est pas juste une actualit√© de plus. C'est le genre d'info qui peut te faire √©conomiser des centaines d'euros sur ton prochain voyage.</p>

<p>On suit ces √©volutions de pr√®s parce qu'on sait que nos lecteurs comptent sur nous pour d√©nicher les vraies bonnes affaires.</p>

<h5>Ce qui change concr√®tement pour toi</h5>
<p>Voici ce que tu dois retenir :</p>

<ul>
<li><strong>${article.type} :</strong> ${article.content}</li>
<li><strong>Validit√© :</strong> ${validityPeriod}</li>
<li><strong>Pour qui :</strong> Voyageurs fran√ßais passionn√©s d'Asie</li>
<li><strong>√âconomies :</strong> 300-800‚Ç¨ par voyage</li>
</ul>

<h5>Notre conseil FlashVoyages</h5>
<p>On te conseille d'agir rapidement. Ces offres sont souvent limit√©es dans le temps et partent vite.</p>

<p>On te recommande de r√©server rapidement pour profiter des offres. C'est le genre de changement qu'on voit venir, et mieux vaut √™tre pr√©par√©.</p>

<h5>Contexte Asie</h5>
<p>Cette √©volution s'inscrit dans une tendance plus large : l'Asie se positionne comme une destination accessible avec des offres attractives.</p>

<p>C'est une bonne nouvelle pour les voyageurs fran√ßais ‚Äî √ßa signifie des √©conomies importantes sur tes voyages.</p>

<h5>Notre analyse</h5>
<p><strong>Score FlashVoyages :</strong> ${article.relevance}/100 ‚Äî Information cruciale</p>
<p><strong>Pourquoi c'est important :</strong> Changement concret dans tes √©conomies de voyage</p>
<p><strong>Action recommand√©e :</strong> Profiter des offres rapidement</p>

<p><em>Cet article a √©t√© analys√© par notre √©quipe FlashVoyages ‚Äî ton sp√©cialiste du voyage en Asie.</em></p>
`,
      cta: "R√©serve maintenant pour profiter de cette offre",
      expertise_score: "8/10"
    };
  }

  // D√©terminer le type de template √† utiliser
  getTemplateType(articleType) {
    const templateMapping = {
      'bon_plan': 'bon_plan',
      'formalites': 'formalites',
      'transport': 'transport',
      'safety': 'formalites',
      'tourism': 'bon_plan'
    };
    
    return templateMapping[articleType] || 'bon_plan';
  }

  // M√©thodes utilitaires
  getTimeAgo(dateString) {
    const now = new Date();
    const date = new Date(dateString);
    const diffMs = now - date;
    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));
    const diffMinutes = Math.floor(diffMs / (1000 * 60));

    if (diffHours < 1) {
      return `${diffMinutes} minutes`;
    } else if (diffHours < 24) {
      return `${diffHours} heures`;
    } else {
      const diffDays = Math.floor(diffHours / 24);
      return `${diffDays} jours`;
    }
  }

  // G√©n√©rer une p√©riode de validit√© coh√©rente
  getValidityPeriod(article) {
    const currentYear = new Date().getFullYear();
    const currentMonth = new Date().getMonth();
    
    // Templates de validit√© selon le type d'article
    const validityTemplates = {
      'bon_plan': `Offre valable jusqu'en d√©cembre ${currentYear}`,
      'transport': `Disponible jusqu'en mars ${currentYear + 1}`,
      'formalit√©s': `R√®glement en vigueur jusqu'en juin ${currentYear + 1}`,
      'safety': `Mesures applicables jusqu'en d√©cembre ${currentYear}`,
      'tourism': `Saison touristique ${currentYear}-${currentYear + 1}`
    };
    
    // Si c'est un bon plan en fin d'ann√©e, √©tendre √† l'ann√©e suivante
    if (article.type === 'bon_plan' && currentMonth >= 10) {
      return `Offre valable jusqu'en mars ${currentYear + 1}`;
    }
    
    return validityTemplates[article.type] || `Valide jusqu'en d√©cembre ${currentYear}`;
  }

  // Rechercher une image Pexels
  async searchPexelsImage(query) {
    try {
      const response = await axios.get('https://api.pexels.com/v1/search', {
        headers: {
          'Authorization': PEXELS_API_KEY
        },
        params: {
          query: query,
          per_page: 1,
          orientation: 'landscape'
        }
      });

      const photos = response.data.photos;
      if (photos && photos.length > 0) {
        return {
          url: photos[0].src.large,
          alt: photos[0].alt || query,
          photographer: photos[0].photographer
        };
      }
      return null;
    } catch (error) {
      console.warn('‚ö†Ô∏è Erreur Pexels:', error.message);
      return null;
    }
  }

  // Uploader une image sur WordPress
  async uploadImageToWordPress(imageUrl, altText) {
    try {
      const imageResponse = await axios.get(imageUrl, {
        responseType: 'arraybuffer'
      });

      const uploadResponse = await axios.post(`${WORDPRESS_URL}/wp-json/wp/v2/media`, imageResponse.data, {
        headers: {
          'Content-Type': 'image/jpeg',
          'Content-Disposition': `attachment; filename="strategic-${Date.now()}.jpg"`
        },
        auth: {
          username: WORDPRESS_USERNAME,
          password: WORDPRESS_APP_PASSWORD
        }
      });

      return uploadResponse.data.id;
    } catch (error) {
      console.warn('‚ö†Ô∏è Erreur upload image:', error.message);
      return null;
    }
  }

  // Cr√©er ou r√©cup√©rer un tag
  async getOrCreateTag(tagName) {
    try {
      const response = await axios.get(`${WORDPRESS_URL}/wp-json/wp/v2/tags?search=${encodeURIComponent(tagName)}`, {
        auth: {
          username: WORDPRESS_USERNAME,
          password: WORDPRESS_APP_PASSWORD
        }
      });

      if (response.data.length > 0) {
        return response.data[0].id;
      }

      const createResponse = await axios.post(`${WORDPRESS_URL}/wp-json/wp/v2/tags`, {
        name: tagName,
        slug: tagName.toLowerCase().replace(/\s+/g, '-')
      }, {
        auth: {
          username: WORDPRESS_USERNAME,
          password: WORDPRESS_APP_PASSWORD
        }
      });

      return createResponse.data.id;
    } catch (error) {
      console.warn(`‚ö†Ô∏è Erreur tag ${tagName}:`, error.message);
      return null;
    }
  }

  // G√©n√©rer et publier un article strat√©gique
  async generateAndPublishStrategicArticle() {
    try {
      console.log('üéØ G√©n√©ration d\'un article strat√©gique FlashVoyages...\n');

      // Charger les articles publi√©s
      await this.loadPublishedArticles();

      // Scraper les sources ultra-fra√Æches
      const articles = await this.scraper.scrapeAllSources();
      
      if (articles.length === 0) {
        console.log('‚ùå Aucun article ultra-fra√Æche trouv√©');
        return;
      }

      // Filtrer les articles pertinents avec le mode intelligent
      console.log('üß† Filtrage intelligent des articles...');
      const relevantArticles = this.intelligentFilter.filterRelevantArticles(articles, 5); // Seuil r√©duit √† 5%
      
      if (relevantArticles.length === 0) {
        console.log('‚ùå Aucun article pertinent trouv√©');
        return;
      }

      console.log(`‚úÖ ${relevantArticles.length} articles pertinents trouv√©s`);

      // Trouver le meilleur article non publi√© parmi les pertinents
      let bestArticle = null;
      for (const article of relevantArticles) {
        if (!this.isArticleAlreadyPublished(article.title)) {
          // V√©rification suppl√©mentaire : √©viter les articles trop similaires
          const titleWords = article.title.toLowerCase().split(/\s+/);
          const commonWords = ['visa', 'nomade', 'asie', 'pays', 'top', 'guide', 'comment', 'o√π', 'quand', 'pourquoi', 'digital', 'nomad'];
          const hasCommonWords = commonWords.some(word => titleWords.includes(word));
          
          if (!hasCommonWords) {
            bestArticle = article;
            break;
          } else {
            console.log('‚ö†Ô∏è Article potentiellement similaire d√©tect√©, passage au suivant...');
          }
        }
      }

      if (!bestArticle) {
        console.log('‚ùå Tous les articles pertinents ont d√©j√† √©t√© publi√©s');
        return;
      }

      console.log(`‚úÖ Article s√©lectionn√©: ${bestArticle.title}`);
      console.log(`üìä Pertinence: ${bestArticle.relevance}/100`);
      console.log(`üè∑Ô∏è Type: ${bestArticle.type}`);
      
      // Afficher l'analyse de pertinence
      if (bestArticle.relevanceAnalysis) {
        const analysis = bestArticle.relevanceAnalysis;
        console.log(`üß† Analyse intelligente:`);
        console.log(`   Cat√©gorie: ${analysis.category}`);
        console.log(`   Scores: Nomade(${analysis.nomadeScore}) Asie(${analysis.asiaScore}) Voyage(${analysis.travelScore})`);
        console.log(`   Pertinence: ${analysis.relevancePercentage.toFixed(1)}%`);
      }

      // G√©n√©rer le contenu strat√©gique avec GPT-4
      const strategicContent = await this.generateStrategicContent(bestArticle);
      
      console.log(`üéØ Titre strat√©gique: ${strategicContent.title}`);
      console.log(`üë• Cible: ${strategicContent.target_audience}`);
      console.log(`üí∞ Valeur √©conomique: ${strategicContent.economic_value}`);
      console.log(`üß† Score d'expertise: ${strategicContent.expertise_score}`);

      // Rechercher une image
      console.log('üñºÔ∏è Recherche d\'image contextuelle...');
      const imageQuery = this.getImageQuery(bestArticle);
      const imageData = await this.searchPexelsImage(imageQuery);
      
      let imageId = null;
      if (imageData) {
        imageId = await this.uploadImageToWordPress(imageData.url, imageData.alt);
        if (imageId) {
          console.log(`‚úÖ Image upload√©e (ID: ${imageId})`);
        }
      }

      // Cr√©er les tags
      const tagNames = ['actualite', 'voyage', 'Asie', bestArticle.type, 'strategique', 'expertise', 'bon-plan'];
      const tagIds = [];
      for (const tagName of tagNames) {
        const tagId = await this.getOrCreateTag(tagName);
        if (tagId) {
          tagIds.push(tagId);
          console.log(`‚úÖ Tag trouv√©: ${tagName} (ID: ${tagId})`);
        }
      }

      // Cr√©er l'article
      console.log('üìù Cr√©ation de l\'article strat√©gique sur WordPress...');
      const articleResponse = await axios.post(`${WORDPRESS_URL}/wp-json/wp/v2/posts`, {
        title: strategicContent.title,
        content: strategicContent.content,
        status: 'publish',
        categories: [1], // Cat√©gorie Asie
        tags: tagIds,
        featured_media: imageId
      }, {
        auth: {
          username: WORDPRESS_USERNAME,
          password: WORDPRESS_APP_PASSWORD
        }
      });

      console.log('üéâ Article strat√©gique publi√© avec succ√®s !');
      console.log(`üîó URL: ${articleResponse.data.link}`);
      console.log(`üìä ID: ${articleResponse.data.id}`);
      console.log(`üìÇ Cat√©gorie: Asie`);
      console.log(`üè∑Ô∏è Tags: ${tagNames.join(', ')}`);
      console.log(`üìä Score strat√©gique: ${bestArticle.relevance}/100`);
      console.log(`üéØ Valeur strat√©gique: ${strategicContent.economic_value}`);
      console.log(`üë• Cible: ${strategicContent.target_audience}`);
      console.log(`üß† Expertise: ${strategicContent.expertise_score}`);
      console.log(`üåè Source: ${bestArticle.source}`);
      console.log(`üè∑Ô∏è Type: ${bestArticle.type}`);
      console.log(`‚ö° Urgence: ${bestArticle.urgency}`);
      if (imageId) {
        console.log(`üñºÔ∏è Image: ${imageId}`);
      }

    } catch (error) {
      console.error('‚ùå Erreur lors de la g√©n√©ration strat√©gique:', error.response ? error.response.data : error.message);
    }
  }

  // G√©n√©rer une requ√™te d'image
  getImageQuery(article) {
    const queries = {
      'bon_plan': 'thailand travel deal savings',
      'transport': 'asia airplane flight premium',
      'formalit√©s': 'asia passport visa official',
      'safety': 'asia travel safety security',
      'tourism': 'asia luxury tourism attraction'
    };
    return queries[article.type] || 'asia luxury travel';
  }
}

// Fonction principale
async function main() {
  const generator = new UltraStrategicGenerator();
  await generator.generateAndPublishStrategicArticle();
}

// Ex√©cution
if (import.meta.url === `file://${process.argv[1]}`) {
  main();
}

export default UltraStrategicGenerator;
